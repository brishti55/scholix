#Post JSON data to data repository

import fileinput
import json
import requests

DATACITE_PREFIX = '10.15128'  #DURHAM prefix
LOCAL_REPO = '******* DURHAM DATA REPOSITORY *******  ' 
API = 'http://api.scholexplorer.openaire.eu/v2/Links'
TEST_POST_METHOD = 'https://httpbin.org/post'
DATA_REPO_SERVER_POST_METHOD = 'https://collections-test.durham.ac.uk/post'

def post_result(my_result, doi, log):
    """ Trys to post JSON data to DATA_REPO_SERVER_POST_METHOD

    """
    dois_found = []
    if len(my_result) == 0:
        log.write("........did not find research data for research ouput DOI")
    else:
        #process data
        for link in my_result:
            source = link['source']
            target = link['target'] #to get pub date
            pub_date = target['PublicationDate']
            if pub_date == None: 
                pub_date == ""
            elif pub_date == "":
                pass
            else:
                pub_date = pub_date[0:4] #just want the pub year
            pub_list = source['Publisher'] #list of pubs
            pub_names = ""
            for index in range(len(pub_list)):
                pub_names = pub_names + pub_list[index]['name'] + ' ; '
            title = source['Title']
            mat_type = source['Type']
            creator_list = source['Creator'] #list of creators
            idict = source['Identifier']
            for id in idict:
                data_doi = id['ID']
                if data_doi.startswith(DATACITE_PREFIX):
                    #Looks like this link points to local data repository; ignore it........
                    print('Ignoring link to local data repository')
                    log.write("........Ignoring link to local data repository")
                    #doi_links[doi] = LOCAL_REPO + data_doi
                    mylist = []
                else:
                    #process id
                    scheme = id['IDScheme']
                    found = 0
                    if scheme == 'doi':
                        for d in dois_found:
                            #no dups allowed
                            if d == data_doi:
                                found = 1
                        if found == 0:
                            dois_found.append(data_doi)
                            r = requests.post(TEST_POST_METHOD, json=my_result) 
        return r.status_code

def main():
    logfile = 'logfile_post_data.log'
    doi_links = {}
    count = 0

    j = open('data.json', 'w')  
    log = open(logfile, 'w')
    
    for doi in fileinput.input():
        doi = doi.rstrip()
        count += 1
        print("##########......##########\n##########  " + str(count ) + "  ##########\n##########......##########\n")
        if not doi:
            #do nothing
            print('found empty line...ignored')
            break
        payload = {'targetPid': doi}
        r = requests.get(API, params=payload)
        if r.raise_for_status() == None:
            print('Processing doi ' + doi)
            log.write('Processing doi ' + doi)
            try:
                json_data = r.json()
            except ValueError:
                print('Invalid JSON')
                log.write("........Invalid JSON")
            else:
                json_string = json.dumps(json_data, indent=4)
                j.write(json_string)
                my_result = json_data['result']
                response_code = post_result(my_result, doi, log)
                if response_code == 200:
                    log.write('... ... ... 200 success')
                else:
                    log.write('... ... ... ' + str(response_code) + ' WHAT HAPPENED?')
            log.write("\n")
    
if __name__ == "__main__":
	main()
